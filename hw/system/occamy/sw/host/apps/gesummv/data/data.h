#ifndef GESUMMV_DATA_H_
#define GESUMMV_DATA_H_

// Statically define the data which will be used for the computation
// (this will be loaded into DRAM together with the binary)

#define N 8
#define double double

const double alpha = 5.693388819564975;
const double beta = -2.8996784772823325;

double A[N*N] = {
    -0.57058, -8.92885,  1.79966, -2.19797, -4.17816, -3.42858, -2.52342, -4.58980, 
     5.20066,  6.19233, -0.77053,  9.31843,  0.68567,  3.61276, -8.57972,  0.45731, 
    -9.17574,  8.75974,  7.91601, -6.10384,  9.43185,  4.35879,  3.50418,  6.15564, 
     9.18084, -3.71389,  0.19155,  1.79270,  5.91394, -0.33918,  8.47670,  7.15125, 
     9.48070,  2.44409,  6.75235, -1.01861, -0.87223, -0.98912,  2.95066, -3.03521, 
     4.85015, -3.20294,  6.24531,  6.14233,  1.29812, -0.35392, -5.15453, -3.31912, 
    -3.54650, -2.60738,  1.75258,  2.76434,  9.33453, -6.35411, -8.81804,  6.29592, 
     9.50875, -9.05804,  4.93577, -5.26493,  4.35890, -4.71640,  1.21972, -0.49146};


double B[N*N] = {
     1.88069,  8.84773,  8.45089, -1.93949,  6.16564,  9.39334,  2.97364, -4.55047, 
     2.39757,  5.21644,  0.17656,  8.13413, -0.66939,  2.63134, -0.24772, -5.63811, 
    -8.30823,  9.83400,  6.36031,  3.73478,  3.66920,  7.84274,  4.34641,  5.29183, 
    -3.07988, -8.39099,  1.06503, -0.35740, -7.63522,  9.35419, -5.44921,  9.87803, 
     7.75411,  4.77828, -0.64755, -8.57218,  2.42203,  4.11214, -7.37245,  1.69184, 
     6.25544,  4.47959, -2.14847, -8.06373,  9.96658,  7.55008,  6.69887, -4.95641, 
    -1.07559,  3.83442, -4.19991, -4.46812, -6.66262,  7.66229, -0.36778,  9.66975, 
    -9.40219,  2.57344,  8.38078,  0.98186, -4.70025,  1.73288, -8.20697, -4.70815};


double x[N] = {
     0.34974, -5.46197,  7.10842,  0.47596,  8.41889,  0.68015, -2.03938, -9.09740};

double y[N];

uint32_t finished = 0;

#endif // GESUMMV_DATA_H_
