#ifndef GESUMMV_DATA_H_
#define GESUMMV_DATA_H_

// Statically define the data which will be used for the computation
// (this will be loaded into DRAM together with the binary)

#define N 8
#define double double

const double alpha = 7.921761523243735;
const double beta = 0.6633116708157072;

double A[N*N] = {
     2.68419, -1.20871,  9.10197,  7.45155, -0.01734,  5.44642, -5.07071,  0.72385, 
     5.48744, -0.78339, -1.43925,  5.15935,  8.93474,  1.59252, -4.06782,  7.51285, 
    -6.21115, -5.17619,  9.00441,  5.78005, -5.93847,  6.38726,  7.67516,  9.06531, 
    -1.19705,  2.35267, -5.28556,  5.51897,  4.29440,  0.18669, -7.31982,  2.47780, 
    -7.79764,  6.48137, -3.72702, -6.81120,  7.93976,  0.38589,  2.16768, -4.58858, 
     2.66600, -2.13856,  4.36838,  4.96651,  4.30585,  0.38468, -8.05832,  1.84374, 
    -5.69199, -4.10801, -9.56074,  6.17245, -7.08170,  6.61341,  6.82518,  4.03660, 
    -0.54722, -6.04618, -9.05045,  7.38970, -9.90634,  6.15617,  1.00021,  2.29667};


double B[N*N] = {
    -3.78928,  6.26659, -9.04228, -1.19275,  5.02522,  9.67372, -3.19385,  7.75301, 
     0.60207,  8.81242,  6.72448,  6.12045, -6.67537,  3.29856, -0.88146,  3.23656, 
    -6.46601, -3.59789,  8.65069, -2.43054, -2.74326,  5.80469,  9.08465,  7.16634, 
     2.64043, -4.60100, -9.25813,  1.62354, -6.94774,  2.31684, -8.06057,  6.98655, 
    -2.26405,  9.84962, -7.48717,  3.17973, -0.82161, -6.36305,  5.81466, -2.73332, 
    -9.36800,  5.95334,  3.31337,  6.47969,  1.18519, -8.45447, -9.01210, -7.95705, 
     1.71342, -5.15583,  9.43075,  2.84097,  8.06198,  1.01793,  6.33394, -4.55465, 
    -4.68811,  4.37735, -3.20883,  4.09830, -0.09139, -1.22408,  5.14078, -3.57407};


double x[N] = {-7.62524, -4.38447,  7.96540, -6.79664,  9.91504,  9.14788, -6.28569, -2.77014};

double y[N];

uint32_t finished = 0;

#endif // GESUMMV_DATA_H_
