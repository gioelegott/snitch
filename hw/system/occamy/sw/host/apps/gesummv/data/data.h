#ifndef GESUMMV_DATA_H_
#define GESUMMV_DATA_H_

// Statically define the data which will be used for the computation
// (this will be loaded into DRAM together with the binary)

#define N 8
#define DATA_TYPE double

const DATA_TYPE alpha = -2.2862773048801444;
const DATA_TYPE beta = 1.8126830182433;

DATA_TYPE A[N*N] = {
    -8.95426,  9.52338,  8.00414, -5.25304,  2.18751, -9.45677, -3.58426, -7.17351, 
     4.04531, -8.32575,  6.92619,  7.47707, -4.25631, -9.44751,  6.85734, -2.28054, 
     8.11316, -3.39137, -1.78783,  6.77297, -0.18213, -3.04727,  9.28402,  7.46105, 
     8.06706,  8.74047, -1.29784,  7.74019,  7.42191, -0.95055,  0.24003, -9.75378, 
     3.02333, -5.89431,  6.89377, -3.47491, -6.97746,  9.31446,  9.52871,  3.24213, 
     6.01456, -7.59820, -5.97244,  0.34492,  1.86168, -7.34129,  7.72117, -9.00792, 
     2.56375, -9.75803,  8.04325, -4.83184, -4.39495, -9.30414, -3.66345, -9.02713, 
     3.44785,  5.54658,  6.45379, -7.42682,  4.48409, -6.07446,  9.76335,  8.33862};


DATA_TYPE B[N*N] = {
    -1.18410,  3.84682, -7.90354, -9.70801, -7.80294,  1.99415,  6.40080, -5.69547, 
     3.79852,  9.56555,  1.73889,  4.85799,  6.33659, -7.48095, -9.95514, -5.24015, 
    -9.31690,  0.07478, -8.79186,  3.40115, -6.34553,  8.39919, -0.58463, -0.50057, 
    -8.73618,  3.07598,  3.05298,  9.48744,  1.01382, -1.24761, -2.14100,  2.07614, 
     9.24984,  3.63032, -6.66593,  3.63931, -0.16945,  6.91421,  5.81582, -3.40779, 
    -7.37565,  0.14375, -8.33312,  0.95560, -4.80307, -6.75328,  6.17712,  8.95946, 
     6.98563,  4.81713,  1.60909,  5.05848, -1.38142,  9.91236, -9.33714,  3.04196, 
     5.25404, -9.60575, -3.02850,  6.61333,  9.98360,  8.72017,  0.66170, -4.65602};


DATA_TYPE x[N] = {-7.24831,  5.01949, -8.68130,  4.04979,  3.75914,  4.55317,  4.61529, -0.19879};

DATA_TYPE y[N];

uint32_t finished = 0;

#endif // GESUMMV_DATA_H_
